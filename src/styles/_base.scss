/* You can add global styles to this file, and also import other style files */
@import "./mixins";
@import "./variables";

@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

@import url("https://fonts.googleapis.com/css2?family=M+PLUS+Rounded+1c:wght@100;300;400;500;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

/***
    The new CSS reset - version 1.4.9 (last updated 11.2.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */

*:where(:not(iframe, canvas, img, svg, video):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-width: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  all: unset;
}

/* fix the feature of 'hidden' attribute.
 display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
 - fix for the content editable attribute will work properly. */
:where([contenteditable]) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  // -webkit-line-break: after-white-space;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
  -webkit-user-drag: element;
}

html {
  font-size: 13px;
}

/* Body font */
body {
  font-family: "Roberto", sans-serif;
}

ul {
  list-style-type: none;
}

a {
  text-decoration: none;
  color: unset;
}

a:hover {
  color: $main-color;
}

@each $color, $val in $colors {
  .color-#{$color} {
    color: $val;
  }
  .bg-#{$color} {
    background-color: $val;
  }
}

@each $val in $numbers {
  .grid-col-lg-#{$val} {
    @include respond-to-max("lg") {
      grid-template-columns: repeat($val, 1fr);
    }
  }
}

@each $val in $numbers {
  .grid-col-md-#{$val} {
    @include respond-to-max("md") {
      grid-template-columns: repeat($val, 1fr);
    }
  }
}

@each $val in $numbers {
  .grid-col-sm-#{$val} {
    @include respond-to-max("sm") {
      grid-template-columns: repeat($val, 1fr);
    }
  }
}

@each $val in $numbers {
  .grid-col-xs-#{$val} {
    @include respond-to-max("xs") {
      grid-template-columns: repeat($val, 1fr);
    }
  }
}

.container {
  width: 95%;
  margin: auto;
  padding: 0 10px;

  @include respond-to("lg") {
    max-width: 1620px;
    padding: 0 50px;
  }

  @include respond-to("sm") {
    padding: 0 20px;
  }
}

.main {
  margin-top: calc(#{$header-mobile-height} + 20px);
  margin-bottom: 2rem;
  min-height: 100vh;

  @include respond-to("sm") {
    margin-top: calc(#{$header-tablet-height} + 10px);
  }

  @include respond-to("md") {
    margin-top: calc(#{$header-height} - 40px);
  }
}

.grid {
  display: grid;
}
